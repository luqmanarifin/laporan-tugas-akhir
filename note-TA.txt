isi bab 2 tentang web sso:
definisi + pembuat
support dan fitur
arsitektur umum/komponen
mekanisme
update/apapun

bab 2 masih bisa ditambah: arsitektur WSO2 tentang provisioning user
bab 2 masih bisa ditambah: protokol
bab 2 masih bisa ditambah: media penyimpanan (LDAP, RDBMS, Redis)
bab 3 analisis per web sso: support SDK dimasukin di auth0 dan wso2
bab 3 dikasih alur kerja SSO

pekerjaan lain:
masalah
how he did it


auth0
+ mudah integrasi
+ dokumentasi bagus, sample jalan
+ support SDK (belom dimasukin)
+ support banyak 
+ punya dashboard
- tidak bisa dikembangkan lanjut
- tidak open source
- self host bayar / proprietary software
- redirect ke sana / down?
- DB mereka kontrol

wso2
+ open source, self hosted possible
+ punya dashboard
+ support SDK (belom dimasukin)
+ integrasi SSO lain banyak
- berat (ntar coba jalanin) 
- manajemen user harus dilakukan pada sisi client, tidak terpusat
- dokumentasi ga jelas, sample tidak jalan

CAS
+ open source, self hosted possible
+ dokumentasi lengkap
+ support LDAP, database
- sample app tidak ada
- ga punya dashboard
- tidak SSL
- berat https://apereo.github.io/cas/development/planning/Installation-Requirements.html#servlet-containers
- (Java, .Net, PHP, Perl, Apache) https://apereo.github.io/cas/5.3.x/index.html
- tidak terkini, tidak support single page app kyk javascript

JOSSO

1 organisasi 
1 organisasi = n service
1 organisasi = n user

# service
read all service
add service
remove service
edit service

# user thingy
signup
login
validate

# provisioning
read all user
add user
delete user
modify user


------------ mysql database -----------
# applications
id
name
client_id
client_secret
description
application_logo
created_at
updated_at

# users
id
user_id
first_name
last_name
picture
gender
email
password
role
latest_login
last_ip
connection
created_at
updated_at

# logins
id
user_id
application_id
token
datetime
status


# tokens
id
token
user_id
created_at
expired_at

------------- redis -------------------
user:<id>       <json user>
token:<token>   <user_id>


analisis solusi
- perbandingan
- system requirement
- software kebutuhan fungsional
- software kebutuhan non fungsional
- use case

rancangan solusi
- gambaran umum solusi
  cara kerja
  REST API. kenapa
  open source
  kemungkinan pengembangan SSO
  kemungkinan pengembangan client
- web SSO
  arsitektur SSO pada eksternal
  arsitektur SSO internal
- dokumentasi
- aplikasi SP
  - vue + material design
  - go + material design
  - aplikasi wiwit
